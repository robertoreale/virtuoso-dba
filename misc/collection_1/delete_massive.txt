create table split_pos as  
select grp,
       dbms_rowid.rowid_create( 1, data_object_id, lo_fno, lo_block, 0 ) min_rid,
       dbms_rowid.rowid_create( 1, data_object_id, hi_fno, hi_block, 10000 ) max_rid
  from (
select distinct grp,
       first_value(relative_fno) 
        over (partition by grp order by relative_fno, block_id
              rows between unbounded preceding and unbounded following) lo_fno,
       first_value(block_id    ) 
       over (partition by grp order by relative_fno, block_id
            rows between unbounded preceding and unbounded following) lo_block,
       last_value(relative_fno) 
        over (partition by grp order by relative_fno, block_id
        rows between unbounded preceding and unbounded following) hi_fno,
       last_value(block_id+blocks-1) 
        over (partition by grp order by relative_fno, block_id
         rows between unbounded preceding and unbounded following) hi_block,
       sum(blocks) over (partition by grp) sum_blocks
  from (
select relative_fno,
       block_id,
       blocks,
       trunc( (sum(blocks) over (order by relative_fno, block_id)-0.01) /
              (sum(blocks) over ()/100) ) grp
  from dba_extents
 where segment_name = upper('RU_POSIZIONI')
   and owner = 'RUUSR' order by block_id
       )
       ),
       (select data_object_id from dba_objects where object_name = upper('RU_POSIZIONI') and owner = 'RUUSR' );


alter table split_pos add ( corrente varchar(1));

update split_pos set corrente = 'X' where corrente is null;



DECLARE
   totalrec   NUMBER;

   curr   VARCHAR2(1);

   CURSOR ctotalrec
   IS
      SELECT grp, min_rid, max_rid from split_pos 
      order by grp;
      
      
   Cursor cur_2 (row_id_1 varchar2, row_id_2 varchar2) is 
   select rowid from ruusr.ru_posizioni where 
   rowid between row_id_1 and row_id_2;

        
BEGIN
   
   totalrec := 0;

   FOR ccursor IN ctotalrec
   LOOP
          select corrente into curr
                 from split_pos 
                 where grp = ccursor.grp;

      if curr = 'X' then

          update split_pos set corrente = 'C' where grp = ccursor.grp;
          commit;
       
       for c_cur_2 in cur_2 (ccursor.min_rid, ccursor.max_rid)
        loop 
           delete from RUUSR.RU_POSIZIONI
           where to_char(dt_rif_flss, 'YYYY-MM-DD')='2012-06-15'
             and rowid = c_cur_2.rowid;

             totalrec := totalrec + 1;

             IF totalrec = 10000
              THEN
              totalrec := 0;
              COMMIT;
             END IF;
        END LOOP;
           update split_pos set corrente = 'F' where grp = ccursor.grp;
          commit;
       end if;
   end loop;

   COMMIT;
END;

alter table RUUSR.RU_POSIZIONI drop constraint RUI_DM_PSZN_UPI_1;

drop index RUUSR.RUI_DM_PSZN_UPI_1;

alter table RUUSR.RU_POSIZIONI add 
CONSTRAINT "RUI_DM_PSZN_UPI_1" PRIMARY KEY 
("COD_IST", "COD_RACCRD_STRMNT_IAC", "COD_RAPP_POS", "COD_STRMNT_IAC", "ID_CLNT_ORDNT", "DT_RIF_POS") 
USING INDEX TABLESPACE "RU_IDX";


CREATE UNIQUE INDEX "RUUSR"."RUI_DM_PSZN_UPI_1" ON "RUUSR"."RU_POSIZIONI"
  (
    "COD_IST", "COD_RACCRD_STRMNT_IAC", "COD_RAPP_POS", "COD_STRMNT_IAC", "ID_CLNT_ORDNT", "DT_RIF_POS"
  )
TABLESPACE "RU_IDX" PARALLEL ;